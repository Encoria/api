services:
  db:
    image: postgres:16-alpine
    container_name: db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Api image will be pulled, not built in the ec2 instance. For local dev, build the image beforehand with the local-dev tag
  api:
    image: ${DOCKER_IMAGE:-local-dev}
    container_name: api
    depends_on:
      db:
        condition: service_healthy
    env_file: .env
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      FIREBASE_ISSUER: ${FIREBASE_ISSUER}
      FIREBASE_JWK_URI: ${FIREBASE_JWK_URI}
      FIREBASE_PROJECT_ID: ${FIREBASE_PROJECT_ID}
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
